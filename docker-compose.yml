# Run with e.g. FRONTEND_CONFIG_PATH=/etc/eulertour/frontend \
#               BACKEND_DATA_PATH=/srv/eulertour/backend \
#               COMPOSE_PROJECT_NAME=eulertour \
#               DOMAIN=dev.eulertour.com docker-compose up
version: '3.1'

services:
  backend:
    build:
      context: backend/
      args:
        - domain=${DOMAIN:?DOMAIN environment variable isn't set}
    ports:
      - 8000:8000
    volumes:
      - ${FRONTEND_CONFIG_PATH:?FRONTEND_CONFIG_PATH environment variable isn't set}/keys:/var/keys
      - ${BACKEND_DATA_PATH:?BACKEND_DATA_PATH environment variable isn't set}:/srv/data
    depends_on:
      - db
    environment:
      - DJANGO_MEDIA_ROOT=${BACKEND_DATA_PATH:?BACKEND_DATA_PATH environment variable isn't set}
  frontend:
    build:
      context: frontend/
      args:
        - domain=${DOMAIN:?DOMAIN environment variable isn't set}
    cap_add:
      - NET_ADMIN
    environment:
      - TZ=America/Los_Angeles
      - URL=${DOMAIN:?DOMAIN environment variable isn't set}
      - SUBDOMAINS=www,api,media
      - EMAIL=devin@eulertour.com
      - REACT_APP_DOMAIN=${DOMAIN:?DOMAIN environment variable isn't set}
    volumes:
      - ${FRONTEND_CONFIG_PATH:?FRONTEND_CONFIG_PATH environment variable isn't set}:/config
      - ${BACKEND_DATA_PATH:?BACKEND_DATA_PATH environment variable isn't set}:/srv/data
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped
    depends_on:
      - backend
  workers:
    build:
      context: workers/
    depends_on:
      - redis
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker
    userns_mode: "host"
  redis:
    image: redis:5.0.3
  db:
    image: postgres:9.6
    volumes:
      - pg_data:/var/lib/postgresql/data
      - pg_backups:/pg_backups
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=etrdatabase

volumes:
  pg_data: {}
  pg_backups: {}
